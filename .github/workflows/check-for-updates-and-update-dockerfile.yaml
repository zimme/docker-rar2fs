name: Check for updates and update Dockerfile

on:
  schedule:
    - cron: "0 0 * * *" # Runs daily at midnight UTC
  workflow_dispatch:

jobs:
  check-version-updates:
    name: Check for new versions
    runs-on: ubuntu-latest
    outputs:
      unrar_version: ${{ steps.get_latest_unrar_version.outputs.version }}
      rar2fs_version: ${{ steps.get_latest_rar2fs_version.outputs.result }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest UnRAR version
        id: get_latest_unrar_version
        run: |
          latest_version=$(curl -s https://www.rarlab.com/rar_add.htm | grep -Eo 'unrarsrc-[0-9]+\.[0-9]+(\.[0-9]+)?\.tar\.gz' | head -n1 | grep -Eo '[0-9]+\.[0-9]+(\.[0-9]+)?')
          echo "version=$latest_version" >> $GITHUB_OUTPUT

      - name: Get latest rar2fs version
        uses: actions/github-script@v7
        id: get_latest_rar2fs_version
        with:
          script: |
            const release = await github.rest.repos.getLatestRelease({
              owner: 'hasse69',
              repo: 'rar2fs'
            });
            return release.data.tag_name.replace(/^v/, '');  // Remove 'v' prefix

  update-dockerfile:
    name: Update Dockerfile with new versions
    runs-on: ubuntu-latest
    needs: check-version-updates
    outputs:
      changed: ${{ steps.git_diff.outputs.changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update Dockerfile with new rar version
        run: |
          sed -i "s/ARG UNRAR_VERSION=[^ ]*/ARG UNRAR_VERSION=${{ needs.check-version-updates.outputs.unrar_version }}/" Dockerfile

      - name: Update Dockerfile with new rar2fs version
        run: |
          sed -i "s/ARG RAR2FS_VERSION=[^ ]*/ARG RAR2FS_VERSION=${{ needs.check-version-updates.outputs.rar2fs_version }}/" Dockerfile

      - name: Check for changes
        id: git_diff
        run: |
          if git diff --quiet Dockerfile; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Upload updated Dockerfile
        if: steps.git_diff.outputs.changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: updated-dockerfile
          path: Dockerfile

  commit-changes:
    name: Commit and push Dockerfile changes
    runs-on: ubuntu-latest
    needs: [check-version-updates, update-dockerfile]
    if: needs.update-dockerfile.outputs.changed == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download updated Dockerfile
        uses: actions/download-artifact@v4
        with:
          name: updated-dockerfile

      - name: Commit Dockerfile updates
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"
          git add Dockerfile
          git commit -m "Update Dockerfile ARG values: rar=${{ needs.check-version-updates.outputs.unrar_version }}, rar2fs=${{ needs.check-version-updates.outputs.rar2fs_version }}"
          git push

      - name: Trigger build workflow
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'docker-build-and-publish.yaml',
              ref: 'main'
            });
